import sys
from io import StringIO

def read_double(prompt):
    while True:
        try:
            valor = float(input(prompt))
            if valor < 0:
                print("Por favor, insira um número positivo")
            else:
                return valor
        except ValueError:
            print("Entrada inválida")

def fake_input(prompt, inputs):
    def input_mock(_prompt=prompt):
        return inputs.pop(0)
    return input_mock

def test_integracao_read_double_entrada_valida():
    inputs = ['123.45']
    original_input = __builtins__.input
    __builtins__.input = fake_input("Digite um número: ", inputs)
    valor = read_double("Digite um número: ")
    __builtins__.input = original_input
    assert valor == 123.45
    print("✅ test_integracao_read_double_entrada_valida passou")

def test_integracao_read_double_entrada_invalida_e_valida():
    inputs = ['abc', '-10', '50.5']
    original_input = __builtins__.input
    __builtins__.input = fake_input("Digite um número: ", inputs)

    old_stdout = sys.stdout
    sys.stdout = mystdout = StringIO()

    valor = read_double("Digite um número: ")

    sys.stdout = old_stdout
    __builtins__.input = original_input

    output = mystdout.getvalue()

    assert "Entrada inválida" in output
    assert "Por favor, insira um número positivo" in output
    assert valor == 50.5
    print("✅ test_integracao_read_double_entrada_invalida_e_valida passou")

# Executando os testes
test_integracao_read_double_entrada_valida()
test_integracao_read_double_entrada_invalida_e_valida()

print("✅ Todos os testes para read_double passaram!")
